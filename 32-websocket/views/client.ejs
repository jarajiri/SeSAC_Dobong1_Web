<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>web sockect 사용해보기</title>
  </head>
  <body>
    <h4>채팅방</h4>
    <h5>채팅 내용</h5>
    <ul></ul>
    <h5>채팅입력</h5>
    <form id="chat">
      <label for="name">이름 : <input type="text" id="name" /></label>
      <label for="msg">내용 : <input type="text" id="msg" /></label>
      <button type="submit">채팅 보내기</button>
    </form>

    <script>
      const socket = new WebSocket("ws://localhost:8080");
      /* 
        Websocket 객체의 이벤트
        -open : 웹소켓 서버에 연결
        -message : 서버에서 메세지를 받았을 때
        -error : 에러 발생시
        -close : 연결이 종료되었을 때
      */
      socket.addEventListener("open", () => {
        console.log("서버에 연결되었습니다.");
        // socket.send("채팅방에 입장!!");
      });

      socket.addEventListener("message", (event) => {
        // 클라이언트에 message는 이벤트 객체의 data 값에 서버에서 보내온 값이 들어온다
        console.log("서버에서 받은 메시지-------", event.data);

        // string to object 파싱
        const data = JSON.parse(event.data);
        console.log(data); // obj
        // data = {
        //   msg: msg.value,
        //   name: name.value,
        // };

        const li = document.createElement("li");
        // 이름 : 내용
        li.textContent = `${data.name} : ${data.msg}`;
        ul.append(li);
      });

      socket.addEventListener("close", (event) => {
        console.log("서버와 연결이 종료됨");
      });

      socket.addEventListener("error", (event) => {
        console.log("error", event.console.console.error);
      });
      /* form 이벤트 */
      const chatForm = document.forms["chat"];
      const ul = document.querySelector("ul");

      chatForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const msg = chatForm.querySelector("#msg");
        const name = chatForm.querySelector("#name");
        const chatData = {
          msg: msg.value,
          name: name.value,
        };
        // console.log(chatData);
        const chatDataJson = JSON.stringify(chatData);
        // socket.send(chatData); // object > string(json)
        // console.log(chatDataJson);
        socket.send(chatDataJson);

        msg.value = "";
        name.value = "";
      });
    </script>
  </body>
</html>
