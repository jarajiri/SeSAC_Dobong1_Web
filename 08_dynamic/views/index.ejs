<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적폼전송</title>
    <style>
      body {
        color: cadetblue;
        background-color: beige;
      }
      .result {
        font-size: 1.5rem;
        font-weight: 700;
      }
    </style>
    <!-- jQuery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"></script>
    <!-- axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h2>동적폼 연습하기</h2>
    <!-- 동적폼전송 시 꼭 폼이 필요한건 아니다 -->
    <!-- 이름과 성별을 입력받는 폼 -->
    <form name="register">
      <input type="text" name="name" required placeholder="이름입력해주세요" />
      <br />
      성별을 선택해주세요
      <input type="radio" name="gender" id="male" value="남자" required />
      <label for="male">남성</label>
      <input type="radio" name="gender" id="female" value="여자" required />
      <label for="female">여성</label>
      <br />
      <br />
      <button type="button" onclick="ajaxGet()">Ajax Get 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax Post 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">axios Get 제출</button>
      <button type="button" onclick="axiosPost()">axios Post 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch Get 제출</button>
      <button type="button" onclick="fetchPost()">fetch Post 제출</button>
      <br />
      <!-- 동적폼 전송 결과를 보여줄 곳 -->
      <div class="result"></div>

      <a href="/open-api">open-api 사용해보기</a>
    </form>

    <script>
      const resultBox = document.querySelector(".result");

      function ajaxGet() {
        const form = document.forms["register"];
        // console.log(form);
        // console.log(form.name);
        // console.log(form.gender);
        // console.log(form.male);

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "get",
          url: "/ajax",
          data: data,
          success: (res) => {
            console.log(res);
            resultBox.textContent = `Get Ajax 요청 완료!: ${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = "red";
          },
          error: (err) => {
            console.log("ajax 실패");
          },
        });
      }
      function ajaxPost() {
        const form = document.forms["register"];

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,
          success: (res) => {
            console.log(res);
            resultBox.textContent = `Post Ajax 요청 완료!: ${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = "blue";
          },
          error: (err) => {
            console.log("ajax 실패");
          },
        });
      }

      async function axiosGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // type button의 유효성 검사 : checkValidity() -- input태그에 관련해서만
        /*
        required 표시된 부분이 있으면 기입이 됐는지 검사
        -required 가 있는 항목에 대해서
            : 기입했다면 true, 아니면 false를 반환
        -required 가 없는 항목
            : 무조건 true 반환
        */

        // console.log(form.name.checkValidity());
        // console.log(form.gender[0].checkValidity()); // radio button은 여러개중 하나만 선택가능해서 둘다 true가 나온다
        // console.log(form.gender[1].checkValidity());

        if (!form.name.checkValidity()) {
          // resultBox.textContent="이름을 입력해주세요"
          resultBox.textContent = form.name.validationMessage; // 이입력란를 작성하세요
        } else if (!form.gender[0].checkValidity()) {
          resultBox.textContent = form.gender[0].validationMessage; // 다음 옵션 중 하나를 선택해주세요
          resultBox.textContent = "성별을 선택해주세요";
        } else {
          // 유효성검사가 다되었을 경우 axios 요청
          //   axios({
          //     method: "GET",
          //     url: "/axios",
          //     params: data, // GET요청일 경우 params로 데이터 전달
          //   }).then(function (res) {
          //     console.log(res); //response 객체
          //     console.log(res.data); // res.send가 보낸 값
          //     console.log(res.status); // 상태코드
          //     console.log(res.statusText);
          //     console.log(res.headers);
          //     const { name, gender } = res.data; // 구조 분해 할당
          //     resultBox.innerText = `Get axios 요청 완료!: ${name}님의 성별은 ${gender}입니다.`;
          //   });

          /* try~catch */
          try {
            const response = await axios({
              method: "GET",
              url: `/axios?name=${data.name}&gender=${data.gender}`,
            });
            console.log(response.data);
            const { name, gender } = response.data; // 구조 분해 할당
            resultBox.innerText = `Get axios 요청 완료!: ${name}님의 성별은 ${gender}입니다.`;
          } catch (err) {
            console.log("error!!", err);
          }
        }
      }
      async function axiosPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
          const response = await axios({
            method: "post",
            url: "/axios",
            data: data,
          });
          console.log(response.data);
          const { name: 이름, gender: 성 } = response.data;
          resultBox.style.color = "blue";
          resultBox.innerText = `Post axios 요청 완료!: ${이름}님의 성별은 ${성}입니다.`;
        } catch (error) {
          console.log(error);
        }
      }

      function fetchGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch(url,{요청과 관련된 데이터})
        fetch(`/fetch?name=${data.name}&gender=${data.gender}`, {
          method: "get", // 생략가능
        })
          .then(function (response) {
            // response 객체 : http 응답 전체를 나타내는 객체,
            // 본문 콘텐츠를 추출하기 위해서 사용하는 메서드 : json(), text()
            console.log(response);
            return response.json(); // fetch는 response 객체를 바로 사용할 수 없고 text나 json로 변환해서 사용
          })
          .then(function (result) {
            console.log(result);
            resultBox.style.color = "green";
            resultBox.innerText = `get fetch 요청 완료!: ${result.name}님의 성별은 ${result.gender}입니다.`;
          })
          .catch((err) => console.log(err));
      }

      async function fetchPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await fetch("/fetch", {
            method: "post",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
            // data를 post 요청으로 보낼 때는
            // object -> JSON으로 변경해서 보냄
          });
          console.log(res);
          const result = await res.json();
          console.log(result);
          resultBox.style.color = "rime";
          resultBox.innerText = `post fetch 요청 완료!: ${result.name}님의 성별은 ${result.gender}입니다.`;
        } catch (err) {
          console.log("err!!!", err);
        }
      }
    </script>
  </body>
</html>
